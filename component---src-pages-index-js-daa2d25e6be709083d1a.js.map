{"version":3,"file":"component---src-pages-index-js-daa2d25e6be709083d1a.js","mappings":"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","sources":["webpack://mustaquenadim/./src/components/sections/blogs.js","webpack://mustaquenadim/./src/components/sections/services.js","webpack://mustaquenadim/./src/pages/index.js"],"sourcesContent":["import { Icon } from '@components/icons';\r\nimport { srConfig } from '@config';\r\nimport { usePrefersReducedMotion } from '@hooks';\r\nimport sr from '@utils/sr';\r\n// import { graphql, Link, useStaticQuery } from 'gatsby';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport styled from 'styled-components';\r\n\r\nconst blogs = [\r\n  {\r\n    title: 'The Ultimate Guide to Mastering Any Programming Language!',\r\n    description:\r\n      'Learning a new programming language is a challenging, but incredibly rewarding, experience. It requires dedication, hard work, willingness to learn, and make mistakes.',\r\n    tech: ['Learn to Code', 'Programming Tips', 'Beginners Guide', 'Programming Language'],\r\n    external:\r\n      'https://medium.com/@mustaquenadim/the-ultimate-guide-to-mastering-any-programming-language-5293d57cc169',\r\n  },\r\n  {\r\n    title: 'Maximize Your Productivity with These Essential JavaScript Array Techniques',\r\n    description:\r\n      'Learn essential techniques for working with JavaScript arrays that will help you maximize your productivity.',\r\n    tech: ['JavaScript', 'Beginners Guide', 'Array Methods'],\r\n    external:\r\n      'https://medium.com/@mustaquenadim/maximize-your-productivity-with-these-essential-javascript-array-techniques-f1a211bef347',\r\n  },\r\n  {\r\n    title: 'JavaScript Strings 101: The Complete Beginnerâ€™s Guide',\r\n    description:\r\n      'Learn JavaScript string methods like charAt, concat, indexOf, lastIndexOf, slice and split in this beginner\\'s guide.',\r\n    tech: ['JavaScript', 'Beginners Guide', 'String Methods'],\r\n    external:\r\n      'https://medium.com/@mustaquenadim/javascript-strings-101-the-complete-beginners-guide-c5505823855d',\r\n  },\r\n];\r\n\r\nconst StyledProjectsSection = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  h2 {\r\n    font-size: clamp(24px, 5vw, var(--fz-heading));\r\n  }\r\n\r\n  .archive-link {\r\n    font-family: var(--font-mono);\r\n    font-size: var(--fz-sm);\r\n    &:after {\r\n      bottom: 0.1em;\r\n    }\r\n  }\r\n\r\n  .projects-grid {\r\n    ${({ theme }) => theme.mixins.resetList};\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n    grid-gap: 15px;\r\n    position: relative;\r\n    margin-top: 50px;\r\n\r\n    @media (max-width: 1080px) {\r\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    }\r\n  }\r\n\r\n  .more-button {\r\n    ${({ theme }) => theme.mixins.button};\r\n    margin: 80px auto 0;\r\n  }\r\n`;\r\n\r\nconst StyledProject = styled.li`\r\n  position: relative;\r\n  cursor: default;\r\n  transition: var(--transition);\r\n\r\n  @media (prefers-reduced-motion: no-preference) {\r\n    &:hover,\r\n    &:focus-within {\r\n      .project-inner {\r\n        transform: translateY(-7px);\r\n      }\r\n    }\r\n  }\r\n\r\n  a {\r\n    position: relative;\r\n    z-index: 1;\r\n  }\r\n\r\n  .project-inner {\r\n    ${({ theme }) => theme.mixins.boxShadow};\r\n    ${({ theme }) => theme.mixins.flexBetween};\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    position: relative;\r\n    height: 100%;\r\n    padding: 2rem 1.75rem;\r\n    border-radius: var(--border-radius);\r\n    background-color: var(--light-navy);\r\n    transition: var(--transition);\r\n    overflow: auto;\r\n  }\r\n\r\n  .project-top {\r\n    ${({ theme }) => theme.mixins.flexBetween};\r\n    margin-bottom: 35px;\r\n\r\n    .folder {\r\n      color: var(--green);\r\n      svg {\r\n        width: 48px;\r\n        height: 48px;\r\n      }\r\n    }\r\n\r\n    .project-links {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-right: -10px;\r\n      color: var(--light-slate);\r\n\r\n      a {\r\n        ${({ theme }) => theme.mixins.flexCenter};\r\n        padding: 5px 7px;\r\n\r\n        &.external {\r\n          svg {\r\n            width: 22px;\r\n            height: 22px;\r\n            margin-top: -4px;\r\n          }\r\n        }\r\n\r\n        svg {\r\n          width: 20px;\r\n          height: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .project-title {\r\n    margin: 0 0 10px;\r\n    color: var(--lightest-slate);\r\n    font-size: var(--fz-xxl);\r\n\r\n    a {\r\n      position: static;\r\n\r\n      &:before {\r\n        content: '';\r\n        display: block;\r\n        position: absolute;\r\n        z-index: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .project-description {\r\n    color: var(--light-slate);\r\n    font-size: 17px;\r\n\r\n    a {\r\n      ${({ theme }) => theme.mixins.inlineLink};\r\n    }\r\n  }\r\n\r\n  .project-tech-list {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    flex-grow: 1;\r\n    flex-wrap: wrap;\r\n    padding: 0;\r\n    margin: 20px 0 0 0;\r\n    list-style: none;\r\n\r\n    li {\r\n      font-family: var(--font-mono);\r\n      font-size: var(--fz-xxs);\r\n      line-height: 1.75;\r\n\r\n      &:not(:last-of-type) {\r\n        margin-right: 15px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Blogs = () => {\r\n  // const data = useStaticQuery(graphql`\r\n  //   query {\r\n  //     projects: allMarkdownRemark(\r\n  //       filter: {\r\n  //         fileAbsolutePath: { regex: \"/content/projects/\" }\r\n  //         frontmatter: { showInProjects: { ne: false } }\r\n  //       }\r\n  //       sort: { fields: [frontmatter___date], order: DESC }\r\n  //     ) {\r\n  //       edges {\r\n  //         node {\r\n  //           frontmatter {\r\n  //             title\r\n  //             tech\r\n  //             github\r\n  //             external\r\n  //           }\r\n  //           html\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // `);\r\n\r\n  const [showMore, setShowMore] = useState(false);\r\n  const revealTitle = useRef(null);\r\n  const revealArchiveLink = useRef(null);\r\n  const revealProjects = useRef([]);\r\n  const prefersReducedMotion = usePrefersReducedMotion();\r\n\r\n  useEffect(() => {\r\n    if (prefersReducedMotion) {\r\n      return;\r\n    }\r\n\r\n    sr.reveal(revealTitle.current, srConfig());\r\n    sr.reveal(revealArchiveLink.current, srConfig());\r\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 100)));\r\n  }, []);\r\n\r\n  const GRID_LIMIT = 6;\r\n  // const projects = data.projects.edges.filter(({ node }) => node);\r\n  const firstSix = blogs.slice(0, GRID_LIMIT);\r\n  const publishedBlogs = showMore ? blogs : firstSix;\r\n\r\n  const projectInner = node => {\r\n    // const { frontmatter, html } = node;\r\n    // const { github, external, title, tech } = frontmatter;\r\n    const { title, description, tech, external } = node;\r\n\r\n    return (\r\n      <div className=\"project-inner\">\r\n        <header>\r\n          <div className=\"project-top\">\r\n            <div className=\"folder\">\r\n              <Icon name=\"Article\" />\r\n            </div>\r\n            <div className=\"project-links\">\r\n              {external && (\r\n                <a\r\n                  href={external}\r\n                  aria-label=\"External Link\"\r\n                  className=\"external\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <Icon name=\"External\" />\r\n                </a>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <h3 className=\"project-title\">\r\n            <a href={external} target=\"_blank\" rel=\"noreferrer\">\r\n              {title}\r\n            </a>\r\n          </h3>\r\n\r\n          <div className=\"project-description\" dangerouslySetInnerHTML={{ __html: description }} />\r\n        </header>\r\n\r\n        <footer>\r\n          {tech && (\r\n            <ul className=\"project-tech-list\">\r\n              {tech.map((tech, i) => (\r\n                <li key={i}>{tech}</li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </footer>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StyledProjectsSection id=\"blogs\">\r\n      <h2 className=\"numbered-heading\" ref={revealTitle}>\r\n        Recently Published Blogs\r\n      </h2>\r\n\r\n      {/* <Link className=\"inline-link archive-link\" to=\"/archive\" ref={revealArchiveLink}>\r\n        view the archive\r\n      </Link> */}\r\n\r\n      <ul className=\"projects-grid\">\r\n        {prefersReducedMotion ? (\r\n          <>\r\n            {publishedBlogs &&\r\n              publishedBlogs.map((node, i) => (\r\n                <StyledProject key={i}>{projectInner(node)}</StyledProject>\r\n              ))}\r\n          </>\r\n        ) : (\r\n          <TransitionGroup component={null}>\r\n            {publishedBlogs &&\r\n              publishedBlogs.map((node, i) => (\r\n                <CSSTransition\r\n                  key={i}\r\n                  classNames=\"fadeup\"\r\n                  timeout={i >= GRID_LIMIT ? (i - GRID_LIMIT) * 300 : 300}\r\n                  exit={false}\r\n                >\r\n                  <StyledProject\r\n                    key={i}\r\n                    ref={el => (revealProjects.current[i] = el)}\r\n                    style={{\r\n                      transitionDelay: `${i >= GRID_LIMIT ? (i - GRID_LIMIT) * 100 : 0}ms`,\r\n                    }}\r\n                  >\r\n                    {projectInner(node)}\r\n                  </StyledProject>\r\n                </CSSTransition>\r\n              ))}\r\n          </TransitionGroup>\r\n        )}\r\n      </ul>\r\n\r\n      <button className=\"more-button\" onClick={() => setShowMore(!showMore)}>\r\n        Show {showMore ? 'Less' : 'More'}\r\n      </button>\r\n    </StyledProjectsSection>\r\n  );\r\n};\r\n\r\nexport default Blogs;\r\n","import { Icon } from '@components/icons';\r\nimport { srConfig } from '@config';\r\nimport { usePrefersReducedMotion } from '@hooks';\r\nimport sr from '@utils/sr';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledServicesSection = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  h2 {\r\n    font-size: clamp(24px, 5vw, var(--fz-heading));\r\n  }\r\n\r\n  .archive-link {\r\n    font-family: var(--font-mono);\r\n    font-size: var(--fz-sm);\r\n    &:after {\r\n      bottom: 0.1em;\r\n    }\r\n  }\r\n\r\n  .services-grid {\r\n    ${({ theme }) => theme.mixins.resetList};\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n    grid-gap: 15px;\r\n    position: relative;\r\n    margin-top: 50px;\r\n\r\n    @media (max-width: 1080px) {\r\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    }\r\n  }\r\n\r\n  .more-button {\r\n    ${({ theme }) => theme.mixins.button};\r\n    margin: 80px auto 0;\r\n  }\r\n`;\r\n\r\nconst StyledService = styled.li`\r\n  position: relative;\r\n  cursor: default;\r\n  transition: var(--transition);\r\n\r\n  @media (prefers-reduced-motion: no-preference) {\r\n    &:hover,\r\n    &:focus-within {\r\n      .service-inner {\r\n        transform: translateY(-7px);\r\n      }\r\n    }\r\n  }\r\n\r\n  a {\r\n    position: relative;\r\n    z-index: 1;\r\n  }\r\n\r\n  .service-inner {\r\n    ${({ theme }) => theme.mixins.boxShadow};\r\n    ${({ theme }) => theme.mixins.flexBetween};\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    position: relative;\r\n    height: 100%;\r\n    padding: 2rem 1.75rem;\r\n    border-radius: var(--border-radius);\r\n    background-color: var(--light-navy);\r\n    transition: var(--transition);\r\n    overflow: auto;\r\n  }\r\n\r\n  .service-top {\r\n    ${({ theme }) => theme.mixins.flexBetween};\r\n    margin-bottom: 35px;\r\n\r\n    .folder {\r\n      color: var(--green);\r\n      margin: auto;\r\n      svg {\r\n        width: 40px;\r\n        height: 40px;\r\n      }\r\n    }\r\n\r\n    .service-links {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-right: -10px;\r\n      color: var(--light-slate);\r\n\r\n      a {\r\n        ${({ theme }) => theme.mixins.flexCenter};\r\n        padding: 5px 7px;\r\n\r\n        &.external {\r\n          svg {\r\n            width: 22px;\r\n            height: 22px;\r\n            margin-top: -4px;\r\n          }\r\n        }\r\n\r\n        svg {\r\n          width: 20px;\r\n          height: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .service-title {\r\n    margin: 0 0 10px;\r\n    color: var(--lightest-slate);\r\n    font-size: var(--fz-xxl);\r\n    text-align: center;\r\n\r\n    a {\r\n      position: static;\r\n\r\n      &:before {\r\n        content: '';\r\n        display: block;\r\n        position: absolute;\r\n        z-index: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .service-description {\r\n    color: var(--light-slate);\r\n    font-size: 17px;\r\n    text-align: center;\r\n\r\n    a {\r\n      ${({ theme }) => theme.mixins.inlineLink};\r\n    }\r\n  }\r\n\r\n  .service-tech-list {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    flex-grow: 1;\r\n    flex-wrap: wrap;\r\n    padding: 0;\r\n    margin: 20px 0 0 0;\r\n    list-style: none;\r\n\r\n    li {\r\n      font-family: var(--font-mono);\r\n      font-size: var(--fz-xxs);\r\n      line-height: 1.75;\r\n\r\n      &:not(:last-of-type) {\r\n        margin-right: 15px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Services = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      services: allMarkdownRemark(\r\n        filter: {\r\n          fileAbsolutePath: { regex: \"/content/services/\" }\r\n          frontmatter: { showInServices: { ne: false } }\r\n        }\r\n        sort: { fields: [frontmatter___order], order: ASC }\r\n      ) {\r\n        edges {\r\n          node {\r\n            frontmatter {\r\n              title\r\n              icon\r\n            }\r\n            html\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const revealContainer = useRef(null);\r\n  const revealTitle = useRef(null);\r\n  const revealArchiveLink = useRef(null);\r\n  const revealServices = useRef([]);\r\n  const prefersReducedMotion = usePrefersReducedMotion();\r\n\r\n  useEffect(() => {\r\n    if (prefersReducedMotion) {\r\n      return;\r\n    }\r\n\r\n    sr.reveal(revealContainer.current, srConfig());\r\n    sr.reveal(revealTitle.current, srConfig());\r\n    sr.reveal(revealArchiveLink.current, srConfig());\r\n    revealServices.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 100)));\r\n  }, []);\r\n\r\n  const GRID_LIMIT = 6;\r\n  const services = data.services.edges.filter(({ node }) => node);\r\n  const firstSix = services.slice(0, GRID_LIMIT);\r\n\r\n  const serviceInner = node => {\r\n    const { frontmatter, html } = node;\r\n    const { github, external, title, tech, icon } = frontmatter;\r\n\r\n    return (\r\n      <div className=\"service-inner\">\r\n        <header>\r\n          <div className=\"service-top\">\r\n            <div className=\"folder\">\r\n              <Icon name={icon} />\r\n            </div>\r\n            <div className=\"service-links\">\r\n              {github && (\r\n                <a href={github} aria-label=\"GitHub Link\" target=\"_blank\" rel=\"noreferrer\">\r\n                  <Icon name=\"GitHub\" />\r\n                </a>\r\n              )}\r\n              {external && (\r\n                <a\r\n                  href={external}\r\n                  aria-label=\"External Link\"\r\n                  className=\"external\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <Icon name=\"External\" />\r\n                </a>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <h3 className=\"service-title\">\r\n            <a href={external} target=\"_blank\" rel=\"noreferrer\">\r\n              {title}\r\n            </a>\r\n          </h3>\r\n\r\n          <div className=\"service-description\" dangerouslySetInnerHTML={{ __html: html }} />\r\n        </header>\r\n\r\n        <footer>\r\n          {tech && (\r\n            <ul className=\"service-tech-list\">\r\n              {tech.map((tech, i) => (\r\n                <li key={i}>{tech}</li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </footer>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StyledServicesSection id=\"services\" ref={revealContainer}>\r\n      <h2 className=\"numbered-heading\">Services I Offer</h2>\r\n\r\n      <ul className=\"services-grid\">\r\n        {prefersReducedMotion ? (\r\n          <>\r\n            {firstSix &&\r\n              firstSix.map(({ node }, i) => (\r\n                <StyledService key={i}>{serviceInner(node)}</StyledService>\r\n              ))}\r\n          </>\r\n        ) : (\r\n          <TransitionGroup component={null}>\r\n            {firstSix &&\r\n              firstSix.map(({ node }, i) => (\r\n                <CSSTransition\r\n                  key={i}\r\n                  classNames=\"fadeup\"\r\n                  timeout={i >= GRID_LIMIT ? (i - GRID_LIMIT) * 300 : 300}\r\n                  exit={false}\r\n                >\r\n                  <StyledService\r\n                    key={i}\r\n                    ref={el => (revealServices.current[i] = el)}\r\n                    style={{\r\n                      transitionDelay: `${i >= GRID_LIMIT ? (i - GRID_LIMIT) * 100 : 0}ms`,\r\n                    }}\r\n                  >\r\n                    {serviceInner(node)}\r\n                  </StyledService>\r\n                </CSSTransition>\r\n              ))}\r\n          </TransitionGroup>\r\n        )}\r\n      </ul>\r\n    </StyledServicesSection>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","import { About, Contact, Featured, Hero, Jobs, Layout } from '@components';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport Blogs from '../components/sections/blogs';\r\nimport Services from '../components/sections/services';\r\n\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport 'swiper/css/pagination';\r\nimport 'swiper/css/scrollbar';\r\n\r\nconst StyledMainContainer = styled.main`\r\n  counter-reset: section;\r\n`;\r\n\r\nconst IndexPage = ({ location }) => (\r\n  <Layout location={location}>\r\n    <StyledMainContainer className=\"fillHeight\">\r\n      <Hero />\r\n      <About />\r\n      <Services />\r\n      <Jobs />\r\n      <Featured />\r\n      {/* <Projects /> */}\r\n      <Blogs />\r\n      <Contact />\r\n    </StyledMainContainer>\r\n  </Layout>\r\n);\r\n\r\nIndexPage.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default IndexPage;\r\n"],"names":["blogs","title","description","tech","external","StyledProjectsSection","styled","theme","mixins","resetList","button","StyledProject","boxShadow","flexBetween","flexCenter","inlineLink","useState","showMore","setShowMore","revealTitle","useRef","revealArchiveLink","revealProjects","prefersReducedMotion","usePrefersReducedMotion","useEffect","sr","current","srConfig","forEach","ref","i","firstSix","slice","publishedBlogs","projectInner","node","className","name","href","target","rel","dangerouslySetInnerHTML","__html","map","key","id","TransitionGroup","component","CSSTransition","classNames","timeout","exit","el","style","transitionDelay","onClick","StyledServicesSection","StyledService","data","useStaticQuery","revealContainer","revealServices","services","edges","filter","serviceInner","frontmatter","html","github","icon","StyledMainContainer","location"],"sourceRoot":""}